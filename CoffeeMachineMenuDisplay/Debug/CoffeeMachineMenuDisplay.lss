
CoffeeMachineMenuDisplay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  000001ae  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  008000ba  008000ba  0000029c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009db  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000069d  00000000  00000000  00000d33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000400  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  000017d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fd  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003c2  00000000  00000000  00001ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000206b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ea       	ldi	r30, 0xAE	; 174
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 3b       	cpi	r26, 0xBA	; 186
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa eb       	ldi	r26, 0xBA	; 186
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 3b       	cpi	r26, 0xBF	; 191
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a7 00 	call	0x14e	; 0x14e <main>
  8a:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_cmd>:
		lcd_curPos(1,15-i);
		lcd_data((uint8_t)r);
		i++;
	}
	lcd_curPos(1,15-i);
}
  92:	8b bb       	out	0x1b, r24	; 27
  94:	85 b3       	in	r24, 0x15	; 21
  96:	8f 77       	andi	r24, 0x7F	; 127
  98:	85 bb       	out	0x15, r24	; 21
  9a:	85 b3       	in	r24, 0x15	; 21
  9c:	80 62       	ori	r24, 0x20	; 32
  9e:	85 bb       	out	0x15, r24	; 21
  a0:	8f e3       	ldi	r24, 0x3F	; 63
  a2:	9f e1       	ldi	r25, 0x1F	; 31
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <lcd_cmd+0x12>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <lcd_cmd+0x18>
  aa:	00 00       	nop
  ac:	85 b3       	in	r24, 0x15	; 21
  ae:	8f 7d       	andi	r24, 0xDF	; 223
  b0:	85 bb       	out	0x15, r24	; 21
  b2:	08 95       	ret

000000b4 <lcd_data>:
  b4:	8b bb       	out	0x1b, r24	; 27
  b6:	85 b3       	in	r24, 0x15	; 21
  b8:	80 68       	ori	r24, 0x80	; 128
  ba:	85 bb       	out	0x15, r24	; 21
  bc:	85 b3       	in	r24, 0x15	; 21
  be:	80 62       	ori	r24, 0x20	; 32
  c0:	85 bb       	out	0x15, r24	; 21
  c2:	8f e3       	ldi	r24, 0x3F	; 63
  c4:	9f e1       	ldi	r25, 0x1F	; 31
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <lcd_data+0x12>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <lcd_data+0x18>
  cc:	00 00       	nop
  ce:	85 b3       	in	r24, 0x15	; 21
  d0:	8f 7d       	andi	r24, 0xDF	; 223
  d2:	85 bb       	out	0x15, r24	; 21
  d4:	08 95       	ret

000000d6 <__init_lcd_>:
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	00 d0       	rcall	.+0      	; 0xde <__init_lcd_+0x8>
  de:	00 d0       	rcall	.+0      	; 0xe0 <__init_lcd_+0xa>
  e0:	00 d0       	rcall	.+0      	; 0xe2 <__init_lcd_+0xc>
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62
  e6:	86 e0       	ldi	r24, 0x06	; 6
  e8:	e0 e6       	ldi	r30, 0x60	; 96
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	de 01       	movw	r26, r28
  ee:	11 96       	adiw	r26, 0x01	; 1
  f0:	01 90       	ld	r0, Z+
  f2:	0d 92       	st	X+, r0
  f4:	8a 95       	dec	r24
  f6:	e1 f7       	brne	.-8      	; 0xf0 <__init_lcd_+0x1a>
  f8:	10 e0       	ldi	r17, 0x00	; 0
  fa:	10 c0       	rjmp	.+32     	; 0x11c <__init_lcd_+0x46>
  fc:	e1 e0       	ldi	r30, 0x01	; 1
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	ec 0f       	add	r30, r28
 102:	fd 1f       	adc	r31, r29
 104:	e1 0f       	add	r30, r17
 106:	f1 1d       	adc	r31, r1
 108:	80 81       	ld	r24, Z
 10a:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
 10e:	8f e1       	ldi	r24, 0x1F	; 31
 110:	9e e4       	ldi	r25, 0x4E	; 78
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <__init_lcd_+0x3c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <__init_lcd_+0x42>
 118:	00 00       	nop
 11a:	1f 5f       	subi	r17, 0xFF	; 255
 11c:	16 30       	cpi	r17, 0x06	; 6
 11e:	70 f3       	brcs	.-36     	; 0xfc <__init_lcd_+0x26>
 120:	26 96       	adiw	r28, 0x06	; 6
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	de bf       	out	0x3e, r29	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	cd bf       	out	0x3d, r28	; 61
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	1f 91       	pop	r17
 132:	08 95       	ret

00000134 <lcd_print>:
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ec 01       	movw	r28, r24
 13a:	03 c0       	rjmp	.+6      	; 0x142 <lcd_print+0xe>
 13c:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcd_data>
 140:	21 96       	adiw	r28, 0x01	; 1
 142:	88 81       	ld	r24, Y
 144:	81 11       	cpse	r24, r1
 146:	fa cf       	rjmp	.-12     	; 0x13c <lcd_print+0x8>
 148:	df 91       	pop	r29
 14a:	cf 91       	pop	r28
 14c:	08 95       	ret

0000014e <main>:
volatile int item=0,previtem;
void showItem();
uint8_t sw_up = 0;
int main(void)
{	
	set_all(DDRA);
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	8a bb       	out	0x1a, r24	; 26
	set_all(DDRC);
 152:	84 bb       	out	0x14, r24	; 20
	clr_all(DDRB);
 154:	17 ba       	out	0x17, r1	; 23
	set_pin(PORTB,PINB7);
 156:	88 b3       	in	r24, 0x18	; 24
 158:	80 68       	ori	r24, 0x80	; 128
 15a:	88 bb       	out	0x18, r24	; 24
	set_pin(PORTB,PINB6);
 15c:	88 b3       	in	r24, 0x18	; 24
 15e:	80 64       	ori	r24, 0x40	; 64
 160:	88 bb       	out	0x18, r24	; 24
	set_pin(PORTB,PINB5);
 162:	88 b3       	in	r24, 0x18	; 24
 164:	80 62       	ori	r24, 0x20	; 32
 166:	88 bb       	out	0x18, r24	; 24
	menu.mode_status = invalid;
	
	cnfrm.mode_name = "Confirm order?";
	cnfrm.mode_status = invalid;
	
	__init_lcd_();
 168:	0e 94 6b 00 	call	0xd6	; 0xd6 <__init_lcd_>
	
	previtem=item;
 16c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <item>
 170:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <item+0x1>
 174:	90 93 be 00 	sts	0x00BE, r25	; 0x8000be <previtem+0x1>
 178:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <previtem>
    while (1)  
    {
		if(_switch_up_) {
 17c:	b7 99       	sbic	0x16, 7	; 22
 17e:	04 c0       	rjmp	.+8      	; 0x188 <main+0x3a>
			sw_up  = 1;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__data_end>
 186:	02 c0       	rjmp	.+4      	; 0x18c <main+0x3e>
		}
		else {
			sw_up = 0;
 188:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <__data_end>
		}
		if(sw_up) {
 18c:	80 91 ba 00 	lds	r24, 0x00BA	; 0x8000ba <__data_end>
 190:	88 23       	and	r24, r24
 192:	39 f0       	breq	.+14     	; 0x1a2 <main+0x54>
			lcd_print("Hello!");
 194:	86 e6       	ldi	r24, 0x66	; 102
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 9a 00 	call	0x134	; 0x134 <lcd_print>
			sw_up = 0;
 19c:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <__data_end>
 1a0:	ed cf       	rjmp	.-38     	; 0x17c <main+0x2e>
		}
		else {
			lcd_cmd(clearLCD);
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd>
 1a8:	e9 cf       	rjmp	.-46     	; 0x17c <main+0x2e>

000001aa <_exit>:
 1aa:	f8 94       	cli

000001ac <__stop_program>:
 1ac:	ff cf       	rjmp	.-2      	; 0x1ac <__stop_program>
